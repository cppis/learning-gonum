package main

import (
	"fmt"

	"gonum.org/v1/gonum/stat/distuv"
)

func main() {
	// const tol = 1e-10
	// for i, tt := range []struct {
	// 	k    float64
	// 	n    float64
	// 	p    float64
	// 	want float64
	// }
	// {
	// 	// Probabilities computed with Wolfram|Alpha (http://wwww.wolframalpha.com)
	// 	{0, 10, 0.5, 0.0009765625},
	// 	{1, 10, 0.5, 0.009765625},
	// 	{2, 10, 0.5, 0.0439453125},
	// 	{3, 10, 0.5, 0.1171875},
	// 	{4, 10, 0.5, 0.205078125},
	// 	{5, 10, 0.75, 5.839920043945313e-02},
	// 	{6, 10, 0.75, 0.1459980010986328},
	// 	{7, 10, 0.75, 0.2502822875976563},
	// 	{8, 10, 0.75, 0.2815675735473633},
	// 	{9, 10, 0.75, 0.1877117156982422},
	// 	{10, 10, 0.75, 5.6313514709472656e-02},

	// 	{0, 25, 0.25, 7.525434581650003e-04},
	// 	{2, 25, 0.25, 2.508478193883334e-02},
	// 	{5, 25, 0.25, 0.1645375881987921},
	// 	{7, 25, 0.25, 0.1654081574485211},
	// 	{10, 25, 0.25, 4.165835076481272e-02},
	// 	{12, 25, 0.01, 4.563372575901533e-18},
	// 	{15, 25, 0.01, 2.956207951505780e-24},
	// 	{17, 25, 0.01, 9.980175928758777e-29},
	// 	{20, 25, 0.99, 4.345539559454088e-06},
	// 	{22, 25, 0.99, 1.843750355939806e-03},
	// 	{25, 25, 0.99, 0.7778213593991468},

	// 	{0.5, 25, 0.5, 0},
	// 	{1.5, 25, 0.5, 0},
	// 	{2.5, 25, 0.5, 0},
	// 	{3.5, 25, 0.5, 0},
	// 	{4.5, 25, 0.5, 0},
	// 	{5.5, 25, 0.5, 0},
	// 	{6.5, 25, 0.5, 0},
	// 	{7.5, 25, 0.5, 0},
	// 	{8.5, 25, 0.5, 0},
	// 	{9.5, 25, 0.5, 0},
	// }
	// {
	// N: 시행 10 번
	// P: 확률 0.1
	// x: 성공 횟수
	b := distuv.Binomial{N: 10, P: 0.1}
	got := b.Prob(1)
	//if !scalar.EqualWithinRel(got, 1, tol) {
	//	e := fmt.Errorf("test-%d: got=%e. want=%e", i, got, tt.want)
	//	fmt.Printf("failed with error %+v\n", e)
	//} else {
	fmt.Printf("succeed with value got %+v, binomial %+v\n", got, b)
	//}
	//}
}
